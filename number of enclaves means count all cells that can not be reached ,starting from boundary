 void dfs(vector<vector<int>>&grid,int y,int x){
        grid[y][x]=0;
        int n=grid.size();
        int m=grid[0].size();
        if(y+1<n&&grid[y+1][x]==1)dfs(grid,y+1,x);
        if(y-1>=0&&grid[y-1][x]==1)dfs(grid,y-1,x);
        if(x+1<m&&grid[y][x+1]==1)dfs(grid,y,x+1);
        if(x-1>=0&&grid[y][x-1]==1)dfs(grid,y,x-1);
        
    }
    int numEnclaves(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        for(int i=0;i<n;i++){
           for(int j=0;j<m;j++){
               if((i*j==0||i==n-1||j==m-1)&&grid[i][j]==1)dfs(grid,i,j);
           }
        }
        // for(int i=0;i<n;i++){
        //   for(int j=0;j<m;j++){
        //       cout<<grid[i][j]<<" ";
        //   }
        //     cout<<endl;
        // }
        int count=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1){
                    
                    count++;
                }
            }
        }
        return count;
        
    }
