 
    // firstly make all the cells 1(using dfs) that are  having  0 and are connected to each other and one  of them is connected to boundry , now the count the islands that are left inside the   matrix by using dfs 
    
    void dfs(vector<vector<int>>&grid,int y,int x){
        int n=grid.size();
        int m=grid[0].size();
        grid[y][x]=1;
        if(y+1<n&&grid[y+1][x]==0)dfs(grid,y+1,x);
         if(y-1>=0&&grid[y-1][x]==0)dfs(grid,y-1,x);
        if(x+1<m&&grid[y][x+1]==0)dfs(grid,y,x+1);
         if(x-1>=0&&grid[y][x-1]==0)dfs(grid,y,x-1);
    }
    int closedIsland(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if((i*j==0||i==n-1||j==m-1)&&grid[i][j]==0){
                    dfs(grid,i,j);
                }
            }
        }
        int count=0;
                for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==0){
                    dfs(grid,i,j);
                    count++;
                }
            }
        }
        
        return count;
    }
